/**
 * ResolverPlugin
 *
 * @param plugins
 * @param types
 * @constructor
 */

function ResolverPlugin(plugins, types) {
  if(!Array.isArray(plugins)) plugins = [plugins];
  if(!types) types = ["normal"];
  else if(!Array.isArray(types)) types = [types];

  this.plugins = plugins;
  this.types = types;
}

module.exports.ResolverPlugin = ResolverPlugin;


/**
 * SimpleResolver for testing
 *
 * @param path
 * @param absolute_alias
 * @param alias
 * @constructor
 */

function SimpleResolver(path, absolute_alias, alias) {
  this.path = path;
  this.alias = alias;
  this.absolute_alias = absolute_alias;
}

SimpleResolver.prototype.apply = function (resolver) {

  var path = this.path;
  var alias = this.alias;
  var absolute_alias = this.absolute_alias;

  resolver.plugin('directory', function (request, done) {

    if(request.request === alias || request.request === absolute_alias) {
      resolver.doResolve('file', {
        path: request.path, request: path
      }, function (error, result) {
        return done(undefined, result || undefined);
      });
    }

    return done();

  });

}

module.exports.SimpleResolver = SimpleResolver;
